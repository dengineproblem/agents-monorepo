import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config({ path: '.env.agent' });

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º OpenAI API...\n');

if (!process.env.OPENAI_API_KEY) {
  console.log('‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env.agent');
  process.exit(1);
}

console.log('‚úÖ API Key –Ω–∞–π–¥–µ–Ω:', process.env.OPENAI_API_KEY.substring(0, 20) + '...\n');

console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ OpenAI...\n');

try {
  const response = await openai.chat.completions.create({
    model: 'gpt-4o',
    messages: [
      {
        role: 'user',
        content: '–°–∫–∞–∂–∏ "–ü—Ä–∏–≤–µ—Ç! LLM —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!" –∏ –æ—Ü–µ–Ω–∏ –∫—Ä–µ–∞—Ç–∏–≤ –ø–æ 100-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ: –ø–æ–∫–∞–∑—ã 1200, –∫–ª–∏–∫–∏ 45, –ª–∏–¥—ã 3, –ø–æ—Ç—Ä–∞—á–µ–Ω–æ $20. –û—Ç–≤–µ—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON: {"message": "...", "score": —á–∏—Å–ª–æ, "verdict": "good"}'
      }
    ],
    response_format: { type: 'json_object' },
    temperature: 0.7,
  });

  const result = JSON.parse(response.choices[0].message.content);
  
  console.log('‚úÖ –û–¢–í–ï–¢ –û–¢ LLM:\n');
  console.log(JSON.stringify(result, null, 2));
  console.log('\nüéâ LLM –†–ê–ë–û–¢–ê–ï–¢! –í—Å–µ –æ–∫!');
  
} catch (error) {
  console.log('‚ùå –û–®–ò–ë–ö–ê:', error.message);
  if (error.response) {
    console.log('–î–µ—Ç–∞–ª–∏:', error.response.data);
  }
  process.exit(1);
}

