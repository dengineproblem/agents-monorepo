# Nginx конфигурация для Docker Compose
# Reverse proxy для frontend и backend

events {
    worker_connections 1024;
}

http {
    # Базовые настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    
    # Увеличенные лимиты для загрузки файлов
    client_max_body_size 500M;
    client_body_timeout 300s;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Upstream для backend
    upstream backend {
        server agent-service:8082;
    }
    
    # Upstream для frontend (Vite собран в nginx, порт 80)
    upstream frontend {
        server frontend:80;
    }
    
    # Основной сервер
    server {
        listen 80;
        server_name localhost;
        
        # Заголовки для CORS (если нужно)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # API запросы идут в backend
        # /api/... -> http://agent-service:8082/...
        location /api/ {
            # Убираем /api из пути при проксировании
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            
            # Буферизация
            proxy_buffering off;
        }
        
        # Все остальные запросы идут во frontend
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            
            # WebSocket support для Next.js HMR
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Отключаем кеш для разработки
            proxy_cache_bypass $http_upgrade;
            
            # Таймауты
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
        }
        
        # Health check для мониторинга
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

