# Nginx Production Configuration
# Domain: performanteaiagency.com

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 500M;
    client_body_timeout 300s;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # ==============================================
    # APP REVIEW FRONTEND (Главный домен)
    # performanteaiagency.com → Frontend App Review (упрощённый)
    # ==============================================
    
    # HTTP → HTTPS редирект
    server {
        listen 80;
        listen [::]:80;
        server_name performanteaiagency.com www.performanteaiagency.com;
        return 301 https://performanteaiagency.com$request_uri;
    }
    
    # HTTPS - App Review Frontend
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name performanteaiagency.com www.performanteaiagency.com;
        
        # SSL сертификаты
        ssl_certificate /etc/letsencrypt/live/performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/performanteaiagency.com/privkey.pem;
        
        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Evolution API (должен быть ПЕРЕД /api/analyzer/ и /api/)
        location /evolution/ {
            proxy_pass http://evolution-api:8080/;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Таймауты для WebSocket и длительных операций
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
        }

        # Analyzer API (должен быть ПЕРЕД общим /api/)
        location /api/analyzer/ {
            # Убираем /api/analyzer из пути при проксировании
            rewrite ^/api/analyzer/(.*)$ /$1 break;
            proxy_pass http://creative-analyzer:7081;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # API запросы → backend
        location /api/ {
            # Убираем /api из пути при проксировании
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://agent-service:8082;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # Frontend App Review (упрощённый)
        location / {
            proxy_pass http://frontend-appreview:80;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Отключаем кеш
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ==============================================
    # PRODUCTION FRONTEND (Поддомен)
    # app.performanteaiagency.com → Frontend Production (полная версия)
    # ==============================================
    
    # HTTP → HTTPS редирект
    server {
        listen 80;
        listen [::]:80;
        server_name app.performanteaiagency.com;
        return 301 https://app.performanteaiagency.com$request_uri;
    }
    
    # HTTPS - Production Frontend
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name app.performanteaiagency.com;
        
        # SSL сертификаты
        ssl_certificate /etc/letsencrypt/live/app.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.performanteaiagency.com/privkey.pem;
        
        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Evolution API (должен быть ПЕРЕД /api/analyzer/ и /api/)
        location /evolution/ {
            proxy_pass http://evolution-api:8080/;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Таймауты для WebSocket и длительных операций
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
        }

        # Analyzer API (должен быть ПЕРЕД общим /api/)
        location /api/analyzer/ {
            # Убираем /api/analyzer из пути при проксировании
            rewrite ^/api/analyzer/(.*)$ /$1 break;
            proxy_pass http://creative-analyzer:7081;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # API запросы → backend
        location /api/ {
            # Убираем /api из пути при проксировании
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://agent-service:8082;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # Frontend Production (полная версия)
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Отключаем кеш
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ==============================================
    # AGENT SERVICE (Поддомен для Backend API)
    # agents.performanteaiagency.com
    # ==============================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name agents.performanteaiagency.com;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name agents.performanteaiagency.com;
        
        ssl_certificate /etc/letsencrypt/live/agents.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/agents.performanteaiagency.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        client_max_body_size 500M;
        client_body_timeout 300s;
        
        # Analyzer API (должен быть ПЕРЕД общим location /)
        location /api/analyzer/ {
            # Убираем /api/analyzer из пути при проксировании
            rewrite ^/api/analyzer/(.*)$ /$1 break;
            proxy_pass http://creative-analyzer:7081;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        location / {
            proxy_pass http://agent-service:8082;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
    }
    
    # ==============================================
    # BRAIN AGENT (Поддомен для Scoring)
    # brain2.performanteaiagency.com
    # ==============================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name brain2.performanteaiagency.com;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name brain2.performanteaiagency.com;
        
        ssl_certificate /etc/letsencrypt/live/brain2.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/brain2.performanteaiagency.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        client_max_body_size 10M;
        
        location / {
            proxy_pass http://agent-brain:7080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ==============================================
    # EVOLUTION API & MANAGER
    # evolution.performanteaiagency.com → evolution-api контейнер
    # ==============================================

    # HTTP → HTTPS редирект
    server {
        listen 80;
        listen [::]:80;
        server_name evolution.performanteaiagency.com;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS - Evolution API
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name evolution.performanteaiagency.com;

        # SSL сертификаты (нужно создать certbot)
        ssl_certificate /etc/letsencrypt/live/evolution.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/evolution.performanteaiagency.com/privkey.pem;

        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Проксируем все на Evolution API (включая Manager UI)
        location / {
            proxy_pass http://evolution-api:8080;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Таймауты для WebSocket и длительных операций (увеличены для Baileys)
            proxy_read_timeout 3600s;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    # ==============================================
    # N8N WORKFLOW AUTOMATION
    # n8n.performanteaiagency.com → n8n контейнер
    # ==============================================
    
    # HTTP → HTTPS редирект
    server {
        listen 80;
        listen [::]:80;
        server_name n8n.performanteaiagency.com;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            try_files $uri =404;
        }
        
        # Редирект на HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS - n8n
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name n8n.performanteaiagency.com;
        
        # SSL сертификаты
        ssl_certificate /etc/letsencrypt/live/n8n.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/n8n.performanteaiagency.com/privkey.pem;
        
        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            try_files $uri =404;
        }
        
        # Webhooks с CORS (критично для интеграций)
        location ^~ /webhook/ {
            client_max_body_size 512M;
            
            # Убираем дублирующиеся CORS-заголовки от n8n
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;
            
            # Добавляем свои CORS-заголовки
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
            
            # Увеличенные таймауты для долгих операций (генерация изображений и т.д.)
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            # Отключаем буферизацию для больших payload
            proxy_request_buffering off;
            
            # Обрабатываем preflight (OPTIONS) сразу
            if ($request_method = OPTIONS) {
                return 204;
            }
            
            # Проксируем в Docker контейнер n8n
            proxy_pass http://root-n8n-1:5678;
            proxy_http_version 1.1;
            
            # WebSocket поддержка
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Стандартные заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Интерфейс n8n и остальные запросы
        location / {
            # Проксируем в Docker контейнер n8n
            proxy_pass http://root-n8n-1:5678;
            proxy_http_version 1.1;
            
            # WebSocket поддержка (для real-time обновлений)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Стандартные заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

