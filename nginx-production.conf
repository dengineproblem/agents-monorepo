# Nginx Production Configuration
# Domain: performanteaiagency.com

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 500M;
    client_body_timeout 300s;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # ==============================================
    # FRONTEND APP (Главный домен)
    # performanteaiagency.com → Frontend приложение
    # ==============================================
    
    # HTTP → HTTPS редирект
    server {
        listen 80;
        listen [::]:80;
        server_name performanteaiagency.com www.performanteaiagency.com;
        return 301 https://performanteaiagency.com$request_uri;
    }
    
    # HTTPS - Frontend App
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name performanteaiagency.com www.performanteaiagency.com;
        
        # SSL сертификаты
        ssl_certificate /etc/letsencrypt/live/performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/performanteaiagency.com/privkey.pem;
        
        # SSL настройки
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Analyzer API (должен быть ПЕРЕД общим /api/)
        location /api/analyzer/ {
            proxy_pass http://creative-analyzer:7081/api/analyzer/;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # API запросы → backend
        location /api/ {
            # Убираем /api из пути при проксировании
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://agent-service:8082;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для длительных операций
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
        
        # Frontend приложение
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Отключаем кеш
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ==============================================
    # AGENT SERVICE (Поддомен для Backend API)
    # agents.performanteaiagency.com
    # ==============================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name agents.performanteaiagency.com;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name agents.performanteaiagency.com;
        
        ssl_certificate /etc/letsencrypt/live/agents.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/agents.performanteaiagency.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        client_max_body_size 500M;
        client_body_timeout 300s;
        
        location / {
            proxy_pass http://agent-service:8082;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
        }
    }
    
    # ==============================================
    # BRAIN AGENT (Поддомен для Scoring)
    # brain2.performanteaiagency.com
    # ==============================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name brain2.performanteaiagency.com;
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name brain2.performanteaiagency.com;
        
        ssl_certificate /etc/letsencrypt/live/brain2.performanteaiagency.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/brain2.performanteaiagency.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        
        client_max_body_size 10M;
        
        location / {
            proxy_pass http://agent-brain:7080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

